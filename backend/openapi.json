{
  "openapi": "3.0.3",
  "info": {
    "title": "backend",
    "description": "",
    "license": {
      "name": "EUPL-1.2"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/elections": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Get a list of all elections, without their candidate lists",
        "operationId": "election_list",
        "responses": {
          "200": {
            "description": "Election list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/elections/{election_id}": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Get election details including its candidate list",
        "operationId": "election_details",
        "parameters": [
          {
            "name": "election_id",
            "in": "path",
            "description": "Election database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Election",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/polling_stations/{polling_station_id}/data_entries/{entry_number}": {
      "post": {
        "tags": [
          "polling_station"
        ],
        "summary": "Save or update the data entry for a polling station",
        "operationId": "polling_station_data_entry",
        "parameters": [
          {
            "name": "polling_station_id",
            "in": "path",
            "description": "Polling station database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "entry_number",
            "in": "path",
            "description": "Data entry number (first or second data entry)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataEntryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Data entry saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "JSON body parsing error (Unprocessable Content)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Candidate": {
        "type": "object",
        "description": "Candidate",
        "required": [
          "number",
          "initials",
          "first_name",
          "last_name",
          "locality"
        ],
        "properties": {
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CandidateGender"
              }
            ],
            "nullable": true
          },
          "initials": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "last_name_prefix": {
            "type": "string",
            "nullable": true
          },
          "locality": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "CandidateGender": {
        "type": "string",
        "description": "Candidate gender",
        "enum": [
          "Male",
          "Female",
          "X"
        ]
      },
      "DataEntryRequest": {
        "type": "object",
        "description": "Request structure for data entry of polling station results",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PollingStationResults"
          }
        }
      },
      "DataEntryResponse": {
        "type": "object",
        "description": "Response structure for data entry of polling station results",
        "required": [
          "saved",
          "message",
          "validation_results"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "saved": {
            "type": "boolean"
          },
          "validation_results": {
            "$ref": "#/components/schemas/ValidationResults"
          }
        }
      },
      "Election": {
        "type": "object",
        "description": "Election, optionally with its political groups",
        "required": [
          "id",
          "name",
          "category",
          "election_date",
          "nomination_date"
        ],
        "properties": {
          "category": {
            "$ref": "#/components/schemas/ElectionCategory"
          },
          "election_date": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "name": {
            "type": "string"
          },
          "nomination_date": {
            "type": "string",
            "format": "date"
          },
          "political_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PoliticalGroup"
            },
            "nullable": true
          }
        }
      },
      "ElectionCategory": {
        "type": "string",
        "description": "Election category (limited for now)",
        "enum": [
          "Municipal"
        ]
      },
      "ElectionDetailsResponse": {
        "type": "object",
        "description": "Election details response, including the election's candidate list (political groups)",
        "required": [
          "election"
        ],
        "properties": {
          "election": {
            "$ref": "#/components/schemas/Election"
          }
        }
      },
      "ElectionListResponse": {
        "type": "object",
        "description": "Election list response\n\nDoes not include the candidate list (political groups) to keep the response size small.",
        "required": [
          "elections"
        ],
        "properties": {
          "elections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Election"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Response structure for errors",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "PoliticalGroup": {
        "type": "object",
        "description": "Political group with its candidates",
        "required": [
          "number",
          "name",
          "candidates"
        ],
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "PollingStationResults": {
        "type": "object",
        "description": "PollingStationResults, following the fields in\n\"Model N 10-1. Proces-verbaal van een stembureau\"\n<https://wetten.overheid.nl/BWBR0034180/2023-11-01#Bijlage1_DivisieN10.1>",
        "required": [
          "voters_counts",
          "votes_counts"
        ],
        "properties": {
          "voters_counts": {
            "$ref": "#/components/schemas/VotersCounts"
          },
          "votes_counts": {
            "$ref": "#/components/schemas/VotesCounts"
          }
        }
      },
      "ValidationResult": {
        "type": "object",
        "required": [
          "fields",
          "code"
        ],
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ValidationResultCode"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidationResultCode": {
        "type": "string",
        "enum": [
          "OutOfRange",
          "IncorrectTotal",
          "AboveThreshold"
        ]
      },
      "ValidationResults": {
        "type": "object",
        "required": [
          "errors",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            }
          }
        }
      },
      "VotersCounts": {
        "type": "object",
        "description": "Voters counts, part of the polling station results.",
        "required": [
          "poll_card_count",
          "proxy_certificate_count",
          "voter_card_count",
          "total_admitted_voters_count"
        ],
        "properties": {
          "poll_card_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid poll cards (\"Aantal geldige stempassen\")",
            "minimum": 0
          },
          "proxy_certificate_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid proxy certificates (\"Aantal geldige volmachtbewijzen\")",
            "minimum": 0
          },
          "total_admitted_voters_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of admitted voters (\"Totaal aantal toegelaten kiezers\")",
            "minimum": 0
          },
          "voter_card_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid voter cards (\"Aantal geldige kiezerspassen\")",
            "minimum": 0
          }
        }
      },
      "VotesCounts": {
        "type": "object",
        "description": "Votes counts, part of the polling station results.",
        "required": [
          "votes_candidates_counts",
          "blank_votes_count",
          "invalid_votes_count",
          "total_votes_cast_count"
        ],
        "properties": {
          "blank_votes_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of blank votes (\"Aantal blanco stembiljetten\")",
            "minimum": 0
          },
          "invalid_votes_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of invalid votes (\"Aantal ongeldige stembiljetten\")",
            "minimum": 0
          },
          "total_votes_cast_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of votes cast (\"Totaal aantal getelde stemmen\")",
            "minimum": 0
          },
          "votes_candidates_counts": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid votes on candidates\n(\"Aantal stembiljetten met een geldige stem op een kandidaat\")",
            "minimum": 0
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "election",
      "description": "Election API"
    },
    {
      "name": "polling_station",
      "description": "Polling station API"
    }
  ]
}