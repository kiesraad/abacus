{
  "openapi": "3.0.3",
  "info": {
    "title": "backend",
    "description": "",
    "license": {
      "name": "EUPL-1.2"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/elections": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Get a list of all elections, without their candidate lists",
        "operationId": "election_list",
        "responses": {
          "200": {
            "description": "Election list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/elections/{election_id}": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Get election details including the election's candidate list (political groups) and its polling stations",
        "operationId": "election_details",
        "parameters": [
          {
            "name": "election_id",
            "in": "path",
            "description": "Election database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Election",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/elections/{election_id}/download_results": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Download a generated PDF with election results",
        "operationId": "election_download_results",
        "parameters": [
          {
            "name": "election_id",
            "in": "path",
            "description": "Election database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF",
            "headers": {
              "Content-Disposition": {
                "schema": {
                  "type": "string"
                },
                "description": "attachment; filename=\"filename.pdf\""
              },
              "Content-Type": {
                "schema": {
                  "type": "string"
                },
                "description": "application/pdf"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/elections/{election_id}/status": {
      "get": {
        "tags": [
          "election"
        ],
        "summary": "Get election polling stations data entry statuses",
        "operationId": "election_status",
        "parameters": [
          {
            "name": "election_id",
            "in": "path",
            "description": "Election database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Election",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/polling_stations/{polling_station_id}/data_entries/{entry_number}": {
      "get": {
        "tags": [
          "polling_station"
        ],
        "summary": "Get an in-progress (not finalised) data entry for a polling station",
        "operationId": "polling_station_data_entry_get",
        "parameters": [
          {
            "name": "polling_station_id",
            "in": "path",
            "description": "Polling station database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "entry_number",
            "in": "path",
            "description": "Data entry number (first or second data entry)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data entry retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataEntryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "polling_station"
        ],
        "summary": "Save or update a data entry for a polling station",
        "operationId": "polling_station_data_entry_save",
        "parameters": [
          {
            "name": "polling_station_id",
            "in": "path",
            "description": "Polling station database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "entry_number",
            "in": "path",
            "description": "Data entry number (first or second data entry)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDataEntryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Data entry saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDataEntryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request cannot be completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "JSON error or invalid data (Unprocessable Content)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "polling_station"
        ],
        "summary": "Delete an in-progress (not finalised) data entry for a polling station",
        "operationId": "polling_station_data_entry_delete",
        "parameters": [
          {
            "name": "polling_station_id",
            "in": "path",
            "description": "Polling station database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "entry_number",
            "in": "path",
            "description": "Data entry number (first or second data entry)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Data entry deleted successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/polling_stations/{polling_station_id}/data_entries/{entry_number}/finalise": {
      "post": {
        "tags": [
          "polling_station"
        ],
        "summary": "Finalise the data entry for a polling station",
        "operationId": "polling_station_data_entry_finalise",
        "parameters": [
          {
            "name": "polling_station_id",
            "in": "path",
            "description": "Polling station database id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "entry_number",
            "in": "path",
            "description": "Data entry number (first or second data entry)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data entry finalised successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request cannot be completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "JSON error or invalid data (Unprocessable Content)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Candidate": {
        "type": "object",
        "description": "Candidate",
        "required": [
          "number",
          "initials",
          "last_name",
          "locality"
        ],
        "properties": {
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CandidateGender"
              }
            ],
            "nullable": true
          },
          "initials": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "last_name_prefix": {
            "type": "string",
            "nullable": true
          },
          "locality": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "CandidateGender": {
        "type": "string",
        "description": "Candidate gender",
        "enum": [
          "Male",
          "Female",
          "X"
        ]
      },
      "CandidateVotes": {
        "type": "object",
        "required": [
          "number",
          "votes"
        ],
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "votes": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "DifferencesCounts": {
        "type": "object",
        "description": "Differences counts, part of the polling station results.",
        "required": [
          "more_ballots_count",
          "fewer_ballots_count",
          "unreturned_ballots_count",
          "too_few_ballots_handed_out_count",
          "too_many_ballots_handed_out_count",
          "other_explanation_count",
          "no_explanation_count"
        ],
        "properties": {
          "fewer_ballots_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of fewer counted ballots (\"Er zijn minder stembiljetten geteld. Hoeveel stembiljetten zijn er minder geteld\")",
            "minimum": 0
          },
          "more_ballots_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of more counted ballots (\"Er zijn méér stembiljetten geteld. Hoeveel stembiljetten zijn er meer geteld?\")",
            "minimum": 0
          },
          "no_explanation_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of no explanations (\"Hoe vaak is er geen verklaring voor het verschil?\")",
            "minimum": 0
          },
          "other_explanation_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of other explanations (\"Hoe vaak is er een andere verklaring voor het verschil?\")",
            "minimum": 0
          },
          "too_few_ballots_handed_out_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of fewer ballots handed out (\"Hoe vaak is er een stembiljet te weinig uitgereikt?\")",
            "minimum": 0
          },
          "too_many_ballots_handed_out_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of more ballots handed out (\"Hoe vaak is er een stembiljet te veel uitgereikt?\")",
            "minimum": 0
          },
          "unreturned_ballots_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of unreturned ballots (\"Hoe vaak heeft een kiezer het stembiljet niet ingeleverd?\")",
            "minimum": 0
          }
        }
      },
      "Election": {
        "type": "object",
        "description": "Election, optionally with its political groups",
        "required": [
          "id",
          "name",
          "location",
          "number_of_voters",
          "category",
          "election_date",
          "nomination_date"
        ],
        "properties": {
          "category": {
            "$ref": "#/components/schemas/ElectionCategory"
          },
          "election_date": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nomination_date": {
            "type": "string",
            "format": "date"
          },
          "number_of_voters": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "political_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PoliticalGroup"
            },
            "nullable": true
          }
        }
      },
      "ElectionCategory": {
        "type": "string",
        "description": "Election category (limited for now)",
        "enum": [
          "Municipal"
        ]
      },
      "ElectionDetailsResponse": {
        "type": "object",
        "description": "Election details response, including the election's candidate list (political groups) and its polling stations",
        "required": [
          "election",
          "polling_stations"
        ],
        "properties": {
          "election": {
            "$ref": "#/components/schemas/Election"
          },
          "polling_stations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PollingStation"
            }
          }
        }
      },
      "ElectionListResponse": {
        "type": "object",
        "description": "Election list response\n\nDoes not include the candidate list (political groups) to keep the response size small.",
        "required": [
          "elections"
        ],
        "properties": {
          "elections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Election"
            }
          }
        }
      },
      "ElectionStatusResponse": {
        "type": "object",
        "description": "Election polling stations data entry statuses response",
        "required": [
          "statuses"
        ],
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PollingStationStatusEntry"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Response structure for errors",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "GetDataEntryResponse": {
        "type": "object",
        "description": "Response structure for getting data entry of polling station results",
        "required": [
          "data",
          "validation_results"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PollingStationResults"
          },
          "validation_results": {
            "$ref": "#/components/schemas/ValidationResults"
          }
        }
      },
      "PoliticalGroup": {
        "type": "object",
        "description": "Political group with its candidates",
        "required": [
          "number",
          "name",
          "candidates"
        ],
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "PoliticalGroupVotes": {
        "type": "object",
        "required": [
          "number",
          "total",
          "candidate_votes"
        ],
        "properties": {
          "candidate_votes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CandidateVotes"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "PollingStation": {
        "type": "object",
        "description": "Polling station of a certain [Election]",
        "required": [
          "id",
          "election_id",
          "name",
          "number",
          "polling_station_type",
          "street",
          "house_number",
          "postal_code",
          "locality"
        ],
        "properties": {
          "election_id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "house_number": {
            "type": "string"
          },
          "house_number_addition": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "locality": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "number_of_voters": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "polling_station_type": {
            "$ref": "#/components/schemas/PollingStationType"
          },
          "postal_code": {
            "type": "string"
          },
          "street": {
            "type": "string"
          }
        }
      },
      "PollingStationResults": {
        "type": "object",
        "description": "PollingStationResults, following the fields in Model Na 31-2 Bijage 2.\n\nSee \"Model Na 31-2. Proces-verbaal van een gemeentelijk stembureau/stembureau voor het openbaar\nlichaam in een gemeente/openbaar lichaam waar een centrale stemopneming wordt verricht,\nBijlage 2: uitkomsten per stembureau\" from the\n[Kiesregeling](https://wetten.overheid.nl/BWBR0034180/2024-04-01#Bijlage1_DivisieNa31.2) or\n[Verkiezingstoolbox](https://www.rijksoverheid.nl/onderwerpen/verkiezingen/verkiezingentoolkit/modellen).",
        "required": [
          "recounted",
          "voters_counts",
          "votes_counts",
          "differences_counts",
          "political_group_votes"
        ],
        "properties": {
          "differences_counts": {
            "$ref": "#/components/schemas/DifferencesCounts"
          },
          "political_group_votes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PoliticalGroupVotes"
            },
            "description": "Vote counts per list and candidate (5. \"Aantal stemmen per lijst en kandidaat\")"
          },
          "recounted": {
            "type": "boolean",
            "description": "Recounted (\"Is er herteld? - See form for official long description of the checkbox\")"
          },
          "voters_counts": {
            "$ref": "#/components/schemas/VotersCounts"
          },
          "voters_recounts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VotersRecounts"
              }
            ],
            "nullable": true
          },
          "votes_counts": {
            "$ref": "#/components/schemas/VotesCounts"
          }
        }
      },
      "PollingStationStatus": {
        "type": "string",
        "enum": [
          "first_entry",
          "first_entry_in_progress",
          "definitive"
        ]
      },
      "PollingStationStatusEntry": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "status": {
            "$ref": "#/components/schemas/PollingStationStatus"
          }
        }
      },
      "PollingStationType": {
        "type": "string",
        "description": "Type of Polling station",
        "enum": [
          "VasteLocatie",
          "Bijzonder",
          "Mobiel"
        ]
      },
      "SaveDataEntryRequest": {
        "type": "object",
        "description": "Request structure for saving data entry of polling station results",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PollingStationResults"
          }
        }
      },
      "SaveDataEntryResponse": {
        "type": "object",
        "description": "Response structure for saving data entry of polling station results",
        "required": [
          "validation_results"
        ],
        "properties": {
          "validation_results": {
            "$ref": "#/components/schemas/ValidationResults"
          }
        }
      },
      "ValidationResult": {
        "type": "object",
        "required": [
          "fields",
          "code"
        ],
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ValidationResultCode"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidationResultCode": {
        "type": "string",
        "enum": [
          "F201",
          "F202",
          "F203",
          "F204",
          "F301",
          "F302",
          "F303",
          "F304",
          "F305",
          "F401",
          "W201",
          "W202",
          "W203",
          "W204",
          "W205",
          "W206",
          "W207",
          "W208",
          "W209",
          "W301",
          "W302"
        ]
      },
      "ValidationResults": {
        "type": "object",
        "required": [
          "errors",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            }
          }
        }
      },
      "VotersCounts": {
        "type": "object",
        "description": "Voters counts, part of the polling station results.",
        "required": [
          "poll_card_count",
          "proxy_certificate_count",
          "voter_card_count",
          "total_admitted_voters_count"
        ],
        "properties": {
          "poll_card_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid poll cards (\"Aantal geldige stempassen\")",
            "minimum": 0
          },
          "proxy_certificate_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid proxy certificates (\"Aantal geldige volmachtbewijzen\")",
            "minimum": 0
          },
          "total_admitted_voters_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of admitted voters (\"Totaal aantal toegelaten kiezers\")",
            "minimum": 0
          },
          "voter_card_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid voter cards (\"Aantal geldige kiezerspassen\")",
            "minimum": 0
          }
        }
      },
      "VotersRecounts": {
        "type": "object",
        "description": "Recounted voters counts, this replaces the original voters counts in the polling station results.",
        "required": [
          "poll_card_recount",
          "proxy_certificate_recount",
          "voter_card_recount",
          "total_admitted_voters_recount"
        ],
        "properties": {
          "poll_card_recount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid poll cards (\"Aantal geldige stempassen\")",
            "minimum": 0
          },
          "proxy_certificate_recount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid proxy certificates (\"Aantal geldige volmachtbewijzen\")",
            "minimum": 0
          },
          "total_admitted_voters_recount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of admitted voters (\"Totaal aantal toegelaten kiezers\")",
            "minimum": 0
          },
          "voter_card_recount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid voter cards (\"Aantal geldige kiezerspassen\")",
            "minimum": 0
          }
        }
      },
      "VotesCounts": {
        "type": "object",
        "description": "Votes counts, part of the polling station results.",
        "required": [
          "votes_candidates_count",
          "blank_votes_count",
          "invalid_votes_count",
          "total_votes_cast_count"
        ],
        "properties": {
          "blank_votes_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of blank votes (\"Aantal blanco stembiljetten\")",
            "minimum": 0
          },
          "invalid_votes_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of invalid votes (\"Aantal ongeldige stembiljetten\")",
            "minimum": 0
          },
          "total_votes_cast_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of votes cast (\"Totaal aantal getelde stemmen\")",
            "minimum": 0
          },
          "votes_candidates_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid votes on candidates\n(\"Aantal stembiljetten met een geldige stem op een kandidaat\")",
            "minimum": 0
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "election",
      "description": "Election API"
    },
    {
      "name": "polling_station",
      "description": "Polling station API"
    }
  ]
}