// Generated by ./scripts/gen_openapi_types.ts

/** PATHS **/

// /api/elections

// /api/elections/{election_id}

// /api/polling_stations/{polling_station_id}/data_entries/{entry_number}
export interface POLLING_STATION_DATA_ENTRY_REQUEST_PARAMS {
  polling_station_id: number;
  entry_number: number;
}
export type POLLING_STATION_DATA_ENTRY_REQUEST_PATH =
  `/api/polling_stations/${number}/data_entries/${number}`;
export type POLLING_STATION_DATA_ENTRY_REQUEST_BODY = DataEntryRequest;

/** TYPES **/

/**
 * Candidate
 */
export interface Candidate {
  country_code?: string;
  first_name: string;
  gender?: any;
  initials: string;
  last_name: string;
  last_name_prefix?: string;
  locality: string;
  number: number;
}

/**
 * Candidate gender
 */
export interface CandidateGender {}

/**
 * Request structure for data entry of polling station results
 */
export interface DataEntryRequest {
  data: PollingStationResults;
}

/**
 * Response structure for data entry of polling station results
 */
export interface DataEntryResponse {
  message: string;
  saved: any;
  validation_results: ValidationResults;
}

/**
 * Election, optionally with its political groups
 */
export interface Election {
  category: ElectionCategory;
  election_date: string;
  id: number;
  name: string;
  nomination_date: string;
  political_groups?: any;
}

/**
 * Election category (limited for now)
 */
export interface ElectionCategory {}

/**
 * Election details response, including the election's candidate list (political groups)
 */
export interface ElectionDetailsResponse {
  election: Election;
}

/**
 * Election list response

Does not include the candidate list (political groups) to keep the response size small.
 */
export interface ElectionListResponse {
  elections: any;
}

/**
 * Response structure for errors
 */
export interface ErrorResponse {
  error: string;
}

/**
 * Political group with its candidates
 */
export interface PoliticalGroup {
  candidates: any;
  name: string;
  number: number;
}

/**
 * PollingStationResults, following the fields in
"Model N 10-1. Proces-verbaal van een stembureau"
<https://wetten.overheid.nl/BWBR0034180/2023-11-01#Bijlage1_DivisieN10.1>
 */
export interface PollingStationResults {
  voters_counts: VotersCounts;
  votes_counts: VotesCounts;
}

export interface ValidationResult {
  code: ValidationResultCode;
  fields: any;
}

export interface ValidationResultCode {}

export interface ValidationResults {
  errors: any;
  warnings: any;
}

/**
 * Voters counts, part of the polling station results.
 */
export interface VotersCounts {
  poll_card_count: number;
  proxy_certificate_count: number;
  total_admitted_voters_count: number;
  voter_card_count: number;
}

/**
 * Votes counts, part of the polling station results.
 */
export interface VotesCounts {
  blank_votes_count: number;
  invalid_votes_count: number;
  total_votes_cast_count: number;
  votes_candidates_counts: number;
}
